#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
//int main()
//{
//	char arr[] = { "abcdef" };
//	printf("%d\n", sizeof(arr));
//	//sizeof 计算arr4所占空间的大小
//	//七个元素 -char7*1=7
//	printf("%d\n", strlen(arr));
//	//strlen 求字符串长度-‘\0’之前的字符长度
//	//[a b c d e f \0]
//	//6
//}
//1.sizeof 和srtlen 没有关联
//2.strlen是求字符串长度的-只能针对字符串长度--库函数-使用得引头文件
//3.sizeof计算变量、数组、类型的大小-单位是字节-操作符
//int main()
//{
//	char arr[] = {1,2,3,4 };
//	//printf("%d\n", strlen(arr1));
//	int a = (sizeof(arr) / sizeof(arr)[0]);
//	int i = 0;
//	for ( i = 0; i < a; i++)
//	{
//		printf("%d ", arr[i]);
//	}
//}
//int main()
//{
//	int arr[3][4] = { {1,2,3},{4,5} };
//	int i = 0;
//	for ( i = 0; i < 3; i++)
//	{
//		int j = 0;
//		for ( j = 0; j <4; j++)
//		{
//			printf("&arr[%d][%d] %p\n",i,j, &arr[i][j]);
//		}
//	}
//}
//void maopao(int arr[], int sz)
//{
//	//确定冒泡排序的趟数
//	int i = 0;
//	for ( i = 0; i < sz; i++)
//	{
//		int flag = 1;//假设这一趟排序的数据已经有序
//		//每一趟冒泡排序
//		int j = 0;
//		for ( j = 0; j < sz-1-i; j++)
//		{
//			if (arr[j] > arr[j + 1])
//			{
//				int tmp = arr[j];
//				arr[j] = arr[j + 1];
//				arr[j + 1] = tmp;
//				flag = 0;//本趟排序的数据其实不完全有序
//			}
//		}
//		if (flag==1)
//		{
//			break;
//		}
//	}
//}
//int main()
//{
//	int i = 0;
//	int arr[] = {10,9,8,7,6,5,4,3,2,1 };
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	//对arr进行排序，排序升序
//	//arr是数组，我们对数组arr进行传参，实际上传递过去的是数组arr首元素的地址&arr（）
//	maopao(arr, sz);//冒泡排序函数
//	for ( i = 0; i < sz; i++)
//	{
//		printf("%d ", arr[i]);
//	}
//	return 0;
//}
int main()
{
	int arr[] = { 1,2,3,4,5 };
	printf("%p\n", arr);
	printf("%p\n", &arr[0]);
	printf("%d\n", *arr);
}
