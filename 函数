#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <string.h>
#include <math.h>
//int Add(int x, int y)
//{
//	int z = 0;
//	z = x + y;
//	return z;
//}
//int main()
//{
//	int a = 1;
//	int b = 2;
//	int sum = Add(a, b);
//	printf("%d\n",sum);
//	return 0;
// }

//int main()
//{
//	char arr1[] = "bit";
//	char arr2[20] = "#########";
//	strcpy(arr2, arr1);
//	printf("%s\n",arr2);
//	//strcpy --string copy 字符串拷贝
//	//strlen --string length 字符串长度
//	return 0;
//}
//memset
//memory 内存set设置
//int main()
//{
//	char arr[] = "hello world";
//	memset(arr, 'x', 5);
//	printf("%s\n", arr);
//	return 0;
//}
//int getmax(int x, int y)
//{
//	if (x>y)
//	{
//		return x;
//	}
//	else
//	{
//		return y;
//	}
//}
//int main()
//{
//	int a = 10;
//	int b = 12;
//	int max = getmax(a, b);
//	printf("max=%d\n", max);
//	max = getmax(100, 200);
//	printf("max=%d\n", max);
//	return 0;
//}
//void swep(int* pa, int* pb)
//{
//	int tmp = 0;
//	tmp = *pa;
//	*pa = *pb;
//	*pb = tmp;
//}
//int main()
//{
//	int a= 1;
//	int b = 2;
//	printf("%d %d\n",a,b);
//	swep(&a, &b);
//	printf("%d %d\n", a, b);
//	return 0;
//}

//is_prime(int n)
//{
//	int j = 0;
//	for ( j = 2; j <= sqrt(n); j++)
//	{
//		if (n%j==0)
//		{
//			return 0;
//		}
//		return 1;
//	}
//}
//int main()
//{
//	int a = 0;
//	for ( a = 100; a <=200; a++)
//	{
//		if (is_prime(a) == 1)
//			printf("%d ", a);
//	}
//	return 0;
//}
//int hanshu(int x)
//{
//	if (((x % 4 == 0 && x % 400 != 0)) ||(x % 400 == 0))
//	{
//		return 1;
//	}
//	return 0;
//}
//int main()
//{
//	int day = 0;
//	for ( day = 1000; day <= 2000; day++)
//	{
//		if (hanshu(day) == 1)
//			printf("%d ", day);
//	}
//	return 0;
//}
//二分查找
//int chazhao(int arr[],int k,int sz)
//{
//	int left = 0;
//	int right = sz - 1;
//	while (left<=right)
//	{
//		int mid = (left + right) / 2;//中间值
//		if (arr[mid]<k)
//		{
//			left = mid + 1;
//		}
//		else if(arr[mid]>k)
//		{
//			right = mid - 1;
//		}
//		else
//		{
//			return mid;
//		}
//	}
//	return -1;
//}
//int main()
//{
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
//	int k = 7;
//	int sz =(sizeof(arr) / sizeof(arr[0]));
//	int ret = chazhao(arr, k, sz);
//	if (ret == -1)
//	{
//		printf("找不到指定数字");
//	}
//	else
//	{
//		printf("找到了下标%d\n", ret);
//	}
//	return 0;
//}
void Add(int* p)
{
	(*p)++;
}
int main()
{
	int num = 0;
	Add(&num);
	printf("num=%d\n", num);
	Add(&num);
		printf("num=%d\n", num);
		Add(&num);
		printf("num=%d\n", num);
	return 0;
}
