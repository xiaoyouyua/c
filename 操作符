#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
//int main()
//{
//	int a = 16;
//	//>>--右移操作符
//	//移动的二进制位
//	
//	int b = a >> 1;
//	printf("%d\n", b);
//	return 0;
//}
//int main()
//{
//	int a = -1;
//	//整数的二进制表示有：原码、反码、补码
//	//存储到内存的是补码
//	//100000000000000000000000000000001-原码
//	//111111111111111111111111111111110-反码
//	//111111111111111111111111111111111-补码
//	int b = a >> 1;
//	printf("%d\n", b);
//	return 0;
//}
//int main()
//{
//	int a = 5;
//	int b = a << 1;
//	printf("%d\n", b);
//	return 0;
//}
//int main()
//{
	//& -按2进制位与
	/*int a = 3;
	int b = 5;
	int c = a & b;*/
	//00000000000000000000000000000011
	//00000000000000000000000000000101
	//00000000000000000000000000000001
	//printf("%d\n", c);
	// | - 按2进制位或
	//int a = 3;
	//int b = 5;
	//int c = a | b;
	//printf("%d\n", c);
	//00000000000000000000000000000011
	//00000000000000000000000000000101
    //00000000000000000000000000000111
	//按2进制位异或
	//相同位0，相异为1
	//int a = 3;
	//int b = 5;
	//int c = a ^ b;
	//printf("%d\n", c);
	//00000000000000000000000000000011
    //00000000000000000000000000000101
	//00000000000000000000000000000110
//	return 0;
//}
//int main()
//{
//	int a = 3;
//	int b = 5;
//	//int tmp =0;//临时变量
//	printf("a=%db=%d\n", a, b);
//	//tmp=a;
//	//a = b;
//	//b = tmp;
//	// 加减方法、容易出错
//	// a=a+b;
//	//b=a-b;
//	// a=a-b;
//	//异或方法
//	a = a ^ b;
//	b = a ^ b;
//	a = a ^ b;
//	printf("a=%db=%d\n", a, b);
//	return 0;
//}
//int main()
//{
//	int num = 0;
//	int count = 0;
//	scanf("%d", &num);
//	int i = 0;
//	for ( i = 0; i < 32; i++)
//	{
//		if (1 == ((num >> i) & 1))
//			count++;
//	}
//	printf("%d\n",count);
//	return 0;
//}
